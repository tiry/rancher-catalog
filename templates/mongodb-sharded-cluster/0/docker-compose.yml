mongo-config:
  restart: always
  environment:
    MONGO_SERVICE_NAME: mongo-config
  tty: true
# mongodb config server is by default on port 27019
# so it does not work with the default replicatset setup that contains a hard-coded 27017
# but because of the way  entrypoint.sh  is coded, we can not send the port via command ...
  entrypoint: "/opt/rancher/bin/entrypoint.sh --configsvr --port 27017 --replSet \"${config_repl_set_name}\""
  image: mongo:3.2
  labels:
    io.rancher.container.hostname_override: container_name
    io.rancher.sidekicks: mongo-base, mongo-datavolume
    io.rancher.container.network: true
  volumes_from:
    - mongo-datavolume
    - mongo-base
mongo-debug:
  restart: always
  environment:
    MONGO_SERVICE_NAME: mongo-config
  tty: true
  entrypoint: /bin/bash -c
  command:
   - while true;do sleep 1;done
  image: mongo:3.2
  labels:
    io.rancher.container.hostname_override: container_name
    io.rancher.sidekicks: mongo-base
    io.rancher.container.network: true
  volumes_from:
    - mongo-base
mongo-s:
  restart: always
  environment:
    MONGO_SERVICE_NAME: mongo-s
  tty: true
  entrypoint: mongos --configdb ${config_repl_set_name}/mongo-config:27017
  image: mongo:3.2
  labels:
    io.rancher.container.network: true
  links: 
     - mongo-config
mongo-shard-one:
  restart: always
  environment:
    MONGO_SERVICE_NAME: mongo-shard-one
  tty: true
  entrypoint: "/opt/rancher/bin/entrypoint.sh --port 27017 --replSet \"${repl_set_prefix}_1\""
  image: mongo:3.2
  labels:
    io.rancher.container.hostname_override: container_name
#    io.rancher.sidekicks: mongo-base, mongo-datavolume
    io.rancher.container.network: true
#  volumes_from:
#    - mongo-datavolume
#    - mongo-base
#
#mongo-shard-two:
#  restart: always
#  environment:
#    MONGO_SERVICE_NAME: mongo-shard-two
#  tty: true
#  entrypoint: "/opt/rancher/bin/entrypoint.sh --port 27017 --replSet \"${repl_set_prefix}_2\""
#  image: mongo:3.2
#  labels:
#    io.rancher.container.hostname_override: container_name
#    io.rancher.sidekicks: mongo-base, mongo-datavolume
#    io.rancher.container.network: true
#  volumes_from:
#    - mongo-datavolume
#    - mongo-base
mongo-shard-setup:
  restart: always
  tty: true
  entrypoint: /bin/bash -c
  command:
   - export shard_ip= `getent hosts mongo-shard-one | awk '{ print $$1 }'| head -n 1`
   - mongo --host mongo-s --eval \"sh.addShard( '${repl_set_prefix}_1/$$shard_ip:27017' )\"
  image: mongo:3.2
  labels:
    io.rancher.container.hostname_override: container_name
    io.rancher.container.network: true
    io.rancher.container.start_once: true
  links: 
     - mongo-s
     - mongo-shard-one
     - mongo-shard-two
mongo-base:
  restart: always
  net: none
  tty: true
  labels:
    io.rancher.container.hostname_override: container_name
    io.rancher.container.start_once: true
  image: rancher/mongodb-conf:v0.1.0
  stdin_open: true
  entrypoint: /bin/true
mongo-datavolume:
  net: none
  labels:
    io.rancher.container.hostname_override: container_name
    io.rancher.container.start_once: true
  volumes:
    - /data/db
  entrypoint: /bin/true
  image: busybox

